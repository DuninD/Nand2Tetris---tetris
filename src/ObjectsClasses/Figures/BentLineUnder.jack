class BentLineUnder{
    field BasedSquare Square1;
    field BasedSquare Square2;
    field BasedSquare Square3;
    field BasedSquare Square4;
    constructor BentLineUnder new(int x, int y){
        var BasedSquare square1;
        var BasedSquare square2;
        var BasedSquare square3;
        var BasedSquare square4;
        let square1 = BasedSquare.new(x, y);
        let square2 = BasedSquare.new(x, y + 16);
        let square3 = BasedSquare.new(x, y + 32);
        let square4 = BasedSquare.new(x + 16, y + 32);
        let Square1 = square1;
        let Square2 = square2;
        let Square3 = square3;
        let Square4 = square4;
        do printBentLineUnder();
        do fall();
        return this;
    }
    
    method BentLineUnder getSquare1(){
        return Square1;
    }
    method BentLineUnder getSquare2(){
        return Square2;
    }
    method BentLineUnder getSquare3(){
        return Square3;
    }
    method BentLineUnder getSquare4(){
        return Square4;
    }
    method void fall(){
        var Speed speed;
        var int address3;
        var int address4;
        let address3 = 16384 + ((Square3.getSquareY() + 16) * 32) + (Square3.getSquareX() / 16);
        let address4 = 16384 + ((Square4.getSquareY() + 16) * 32) + (Square4.getSquareX() / 16);
        let speed = Speed.new();
        do Sys.wait(speed.getSpeed());
        if ((Memory.peek(address3) = 0) & (Memory.peek(address4) = 0))
        {  
            do Screen.setColor(false);
            do printBentLineUnder();
            do fallToOnePixel();
            do Screen.setColor(true);
            do printBentLineUnder();
            do fall();
         }
         return;
    }
    method void fallToOnePixel(){
        do Square1.setSquare(Square1.getSquareX(), Square1.getSquareY() + 1);
        do Square2.setSquare(Square2.getSquareX(), Square2.getSquareY() + 1);
        do Square3.setSquare(Square3.getSquareX(), Square3.getSquareY() + 1);
        do Square4.setSquare(Square4.getSquareX(), Square4.getSquareY() + 1);
        return;
    }
    method void printBentLineUnder(){
        do Square1.printSquare();
        do Square2.printSquare();
        do Square3.printSquare();
        do Square4.printSquare();
        return;
    }
}