class ZFigureLeft{
    field bool Move;
    field Speed speed;
    field MovementTime Count;
    field Position position;
    field BasedSquare Square1, Square2, Square3, Square4;
    constructor ZFigureLeft new(int x, int y){
        var Position pos;
        var BasedSquare square1, square2, square3, square4;
        let Move = false;
        let pos = Position.new();
        let speed = Speed.new();
        let square1 = BasedSquare.new(x, y);
        let square2 = BasedSquare.new(x + 16, y);
        let square3 = BasedSquare.new(x + 16, y+16);
        let square4 = BasedSquare.new(x + 32, y+16);
        let Square1 = square1;
        let Square2 = square2;
        let Square3 = square3;
        let Square4 = square4;
        let position = pos;
        do printZFigureLeft();
        do fall();
        return this;
    }
    method BasedSquare getSquare(int i){
        if (i = 1){return Square1;}
        if (i = 2){return Square2;}
        if (i = 3){return Square3;}
        if (i = 4){return Square4;}
        return null;
    }
    method void TryToMove(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4, int key){
        do ClearZFigureLeft();
        do MoveZFigureLeft(x1, y1, x2, y2, x3, y3, x4, y4);
        if (CanDrawFigure() = false){
            do MoveZFigureLeft(-x1, -y1, -x2, -y2, -x3, -y3, -x4, -y4);
            do printZFigureLeft();
        }
        else{
            if (key = 131){ do position.TurnRight();}
            else { do position.TurnLeft();}
            do printZFigureLeft();
        }
        return;
    }
    method void TurnZFigure(int key){
        if ((position.GetPosition() = 0) | (position.GetPosition() = 2)){
            do TryToMove(16, 32, 16, 0, 0, 0, 0, 0, key);
            return;
        }
        if ((position.GetPosition() = 1) | (position.GetPosition() = 3)){
            do TryToMove(-16, -32, -16, 0, 0, 0, 0, 0, key);
            return;
        }
        return;
    }
    method void fall(){
        var int key;
        var int address1, address2, address3, address4;
        let Count = MovementTime.new();
        while (Count.getMovementTime() > 0){
            do Count.Minus();
            let key = Keyboard.keyPressed();

            if (key = 131){ do TurnZFigure(key);}
            if (key = 133){ do TurnZFigure(key);}
            if (key = 132){ do MoveRight();}
            if (key = 130){ do MoveLeft();}

            if ((key = 131) | (key = 133) | (key = 132) | (key = 130)){ do BreakAndWait();}
        }
        do Sys.wait(speed.getSpeed());
        if (Move = false){
            if (position.GetPosition() = 0){
                let address1 = 16384 + ((Square1.getSquareY() + 16) * 32) + (Square1.getSquareX() / 16);
                let address2 = 16384 + ((Square2.getSquareY() + 16) * 32) + (Square2.getSquareX() / 16);
                let address3 = 16384 + ((Square3.getSquareY() + 16) * 32) + (Square3.getSquareX() / 16);
                let address4 = 16384 + ((Square4.getSquareY() + 16) * 32) + (Square4.getSquareX() / 16);
                if (((Memory.peek(address1) > 0) | (Memory.peek(address1) = 0)) & ((Memory.peek(address3) > 0) | (Memory.peek(address3) = 0)) & ((Memory.peek(address4) > 0) | (Memory.peek(address4) = 0))){ 
                    do MoveDownAndDraw();
                }
            }
            if (position.GetPosition() = 1){
                let address4 = 16384 + ((Square4.getSquareY() + 16) * 32) + (Square4.getSquareX() / 16);
                let address1 = 16384 + ((Square1.getSquareY() + 16) * 32) + (Square1.getSquareX() / 16);
                if (((Memory.peek(address1) > 0) | (Memory.peek(address1) = 0)) & ((Memory.peek(address4) > 0) | (Memory.peek(address4) = 0))){  
                    do MoveDownAndDraw();
                }
            }
            if (position.GetPosition() = 2){
                let address1 = 16384 + ((Square1.getSquareY() + 16) * 32) + (Square1.getSquareX() / 16);
                let address3 = 16384 + ((Square3.getSquareY() + 16) * 32) + (Square3.getSquareX() / 16);
                let address4 = 16384 + ((Square4.getSquareY() + 16) * 32) + (Square4.getSquareX() / 16);
                if (((Memory.peek(address1) > 0) | (Memory.peek(address1) = 0)) & ((Memory.peek(address3) > 0) | (Memory.peek(address3) = 0)) & ((Memory.peek(address4) > 0) | (Memory.peek(address4) = 0))){ 
                    do MoveDownAndDraw();
                }
            }
            if (position.GetPosition() = 3){
                let address4 = 16384 + ((Square4.getSquareY() + 16) * 32) + (Square4.getSquareX() / 16);
                let address1 = 16384 + ((Square1.getSquareY() + 16) * 32) + (Square1.getSquareX() / 16);
                if (((Memory.peek(address1) > 0) | (Memory.peek(address1) = 0)) & ((Memory.peek(address4) > 0) | (Memory.peek(address4) = 0))){  
                    do MoveDownAndDraw();
                }
            }
            return;
        }
        let Move = false;
        do fall();
        return;
    }
    method void fallToPixels(){
        var CountPixelsMove countPixelsMove;
        var int count;
        let countPixelsMove = CountPixelsMove.new();
        let count = countPixelsMove.getCountPixelsMove();
        do MoveZFigureLeft(0, count, 0, count, 0, count, 0, count);
        return;
    }
    method void printZFigureLeft(){
        do Square1.printSquare();
        do Square2.printSquare();
        do Square3.printSquare();
        do Square4.printSquare();
        return;
    }
        method void MoveRight(){
        let Move = true;
        do ClearZFigureLeft();
        do Screen.setColor(true);
        do MoveZFigureLeft(16, 16, 16, 16, 16, 16, 16, 16);
        if (CanDrawFigure() = false){
            do MoveZFigureLeft(-16, -16, -16, -16, -16, -16, -16, -16);
            let Move = false;
        }
        do printZFigureLeft();
        return;
    }
    method void MoveLeft(){
        let Move = true;
        do ClearZFigureLeft();
        do Screen.setColor(true);
        do MoveZFigureLeft(-16, 16, -16, 16, -16, 16, -16, 16);
        if (CanDrawFigure() = false){
            do MoveZFigureLeft(16, -16, 16, -16, 16, -16, 16, -16);
            let Move = false;
        }
        do printZFigureLeft();
        return;
    }
    method void MoveZFigureLeft(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4){
        do Square1.setSquare(Square1.getSquareX() + x1, Square1.getSquareY() + y1);
        do Square2.setSquare(Square2.getSquareX() + x2, Square2.getSquareY() + y2);
        do Square3.setSquare(Square3.getSquareX() + x3, Square3.getSquareY() + y3);
        do Square4.setSquare(Square4.getSquareX() + x4, Square4.getSquareY() + y4);
        return;
    }
    method void MoveDownAndDraw(){
        do ClearZFigureLeft();
        do fallToPixels();
        do Screen.setColor(true);
        do printZFigureLeft();
        do fall();
        return;
    }
    method void BreakAndWait(){
        do Count.setZero();
        do Sys.wait(speed.getSpeed());  
        return;
    }
    method void ClearZFigureLeft(){
        do Square1.clear();
        do Square2.clear();
        do Square3.clear();
        do Square4.clear();
        return;
    }
    method bool CanDrawFigure(){
        if ((Square1.CanDraw() = true) & (Square2.CanDraw() = true) & (Square3.CanDraw() = true) & (Square4.CanDraw() = true)){
            return true;
        }
        return false;
    }
}