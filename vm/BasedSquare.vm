function BasedSquare.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push constant 10
pop this 1
push pointer 0
return
function BasedSquare.getSquareX 0
push argument 0
pop pointer 0
push this 0
call Point.getX 1
return
function BasedSquare.getSquareY 0
push argument 0
pop pointer 0
push this 0
call Point.getY 1
return
function BasedSquare.getPoint 0
push argument 0
pop pointer 0
push this 0
return
function BasedSquare.printSquare 0
push argument 0
pop pointer 0
push this 0
call Point.getX 1
push this 0
call Point.getY 1
push this 0
call Point.getX 1
push this 1
add
push this 0
call Point.getY 1
push this 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
<<<<<<< HEAD
=======
call Screen.setColor 1
pop temp 0
push this 0
call Point.getX 1
push constant 1
add
push this 0
call Point.getY 1
push constant 1
add
push this 0
call Point.getX 1
push this 1
add
push constant 4
sub
push this 0
call Point.getY 1
push this 1
add
push constant 4
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
call Point.getX 1
push constant 2
add
push this 0
call Point.getY 1
push constant 2
add
push this 0
call Point.getX 1
push this 1
add
push constant 4
sub
push this 0
call Point.getY 1
push this 1
add
push constant 4
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function BasedSquare.clear 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
call Point.getX 1
push this 0
call Point.getY 1
push this 0
call Point.getX 1
push this 1
add
push this 0
call Point.getY 1
push this 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function BasedSquare.CanDraw 2
push argument 0
pop pointer 0
push constant 16384
push this 0
call Point.getY 1
push constant 15
add
push constant 32
call Math.multiply 2
add
push this 0
call Point.getX 1
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push this 0
call Point.getY 1
push constant 32
call Math.multiply 2
add
push this 0
call Point.getX 1
push constant 16
call Math.divide 2
add
pop local 1
push local 0
call Memory.peek 1
push constant 0
gt
push local 0
call Memory.peek 1
push constant 0
eq
or
push local 1
call Memory.peek 1
push constant 0
gt
push local 1
call Memory.peek 1
push constant 0
eq
or
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
>>>>>>> 3c0bc4a (Realize all default game figures without any bugs)
return
