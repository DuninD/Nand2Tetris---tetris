class BasedSquare{
    field Point LeftUpperCorner;
    field int Size;
    constructor BasedSquare new(int x, int y){
        var Point leftUpperCorner;
        let leftUpperCorner = Point.new(x,y);
        let LeftUpperCorner = leftUpperCorner;
        let Size = 15;
        return this;
    }
    method int getSquareX(){
        return LeftUpperCorner.getX();
    }
    method int getSquareY(){
        return LeftUpperCorner.getY();
    }
    method Point getPoint(){
        return LeftUpperCorner;
    }
    method void setSquare(int x, int y){
        do LeftUpperCorner.setPoint(x,y);
        return;
    }
    method void printSquare(){
        do Screen.setColor(true);
        do Screen.drawRectangle(LeftUpperCorner.getX(), LeftUpperCorner.getY(), LeftUpperCorner.getX()+Size, LeftUpperCorner.getY()+Size);
        do Screen.setColor(false);
        ////do Screen.drawLine(LeftUpperCorner.getX() + 1, LeftUpperCorner.getY() + 1, LeftUpperCorner.getX() + 14, LeftUpperCorner.getY() + 1);
        ////do Screen.drawLine(LeftUpperCorner.getX() + 1, LeftUpperCorner.getY() + 1, LeftUpperCorner.getX() + 1, LeftUpperCorner.getY() + 14);
        ////do Screen.setColor(true);
        do Screen.drawRectangle(LeftUpperCorner.getX() + 1, LeftUpperCorner.getY() + 1, LeftUpperCorner.getX()+Size - 4, LeftUpperCorner.getY()+Size - 4);
        do Screen.setColor(true);
        do Screen.drawRectangle(LeftUpperCorner.getX() + 2, LeftUpperCorner.getY() + 2, LeftUpperCorner.getX()+Size - 4, LeftUpperCorner.getY()+Size - 4);
        //do Screen.drawRectangle(LeftUpperCorner.getX(), LeftUpperCorner.getY(), LeftUpperCorner.getX()+Size, LeftUpperCorner.getY()+Size);
        return;
    }
    method void clear(){
        do Screen.setColor(false);
        do Screen.drawRectangle(LeftUpperCorner.getX(), LeftUpperCorner.getY(), LeftUpperCorner.getX()+Size, LeftUpperCorner.getY()+Size);
        return;
    }
    method bool CanDraw(){
        var int formula1;
        var int formula2;
        let formula1 = 16384 + ((LeftUpperCorner.getY() + 15) * 32) + (LeftUpperCorner.getX() / 16);
        let formula2 = 16384 + ((LeftUpperCorner.getY()) * 32) + (LeftUpperCorner.getX() / 16);
        if (((Memory.peek(formula1) > 0) | (Memory.peek(formula1) = 0)) & ((Memory.peek(formula2) > 0) | (Memory.peek(formula2) = 0))){
            return true;
        }
        return false;
    }
}