class BigSquare{
    field Position position;
    field BasedSquare Square1;
    field BasedSquare Square2;
    field BasedSquare Square3;
    field BasedSquare Square4;
    constructor BigSquare new(int x, int y){
        var Position pos;
        var BasedSquare square1;
        var BasedSquare square2;
        var BasedSquare square3;
        var BasedSquare square4;
        let pos = Position.new();
        let square1 = BasedSquare.new(x, y);
        let square2 = BasedSquare.new(x + 16, y);
        let square3 = BasedSquare.new(x, y+16);
        let square4 = BasedSquare.new(x + 16, y + 16);
        let Square1 = square1;
        let Square2 = square2;
        let Square3 = square3;
        let Square4 = square4;
        let position = pos;
        do printBigSquare();
        do fall();
        return this;
    }
    method BasedSquare getSquare1(){
        return Square1;
    }
    method BasedSquare getSquare2(){
        return Square2;
    }
    method BasedSquare getSquare3(){
        return Square3;
    }
    method BasedSquare getSquare4(){
        return Square4;
    }
    method void TurnBigSquare(){
        if (position.GetPosition() = 1){
            do Screen.setColor(false);
            do Clear();
            do Screen.setColor(true);
            do Square1.setSquare(Square1.getSquareX(), Square1.getSquareY());
            do Square2.setSquare(Square2.getSquareX(), Square2.getSquareY());
            do Square3.setSquare(Square3.getSquareX(), Square3.getSquareY());
            do Square4.setSquare(Square4.getSquareX(), Square4.getSquareY());
        }
        if (position.GetPosition() = 2){
            do Screen.setColor(false);
            do Clear();
            do Screen.setColor(true);
            do Square1.setSquare(Square1.getSquareX(), Square1.getSquareY());
            do Square2.setSquare(Square2.getSquareX(), Square2.getSquareY());
            do Square3.setSquare(Square3.getSquareX(), Square3.getSquareY());
            do Square4.setSquare(Square4.getSquareX(), Square4.getSquareY());
        }
        if (position.GetPosition() = 3){
            do Screen.setColor(false);
            do Clear();
            do Screen.setColor(true);
            do Square1.setSquare(Square1.getSquareX(), Square1.getSquareY());
            do Square2.setSquare(Square2.getSquareX(), Square2.getSquareY());
            do Square3.setSquare(Square3.getSquareX(), Square3.getSquareY());
            do Square4.setSquare(Square4.getSquareX(), Square4.getSquareY());
        }
        if (position.GetPosition() = 0){
            do Screen.setColor(false);
            do Clear();
            do Screen.setColor(true);
            do Square1.setSquare(Square1.getSquareX(), Square1.getSquareY());
            do Square2.setSquare(Square2.getSquareX(), Square2.getSquareY());
            do Square3.setSquare(Square3.getSquareX(), Square3.getSquareY());
            do Square4.setSquare(Square4.getSquareX(), Square4.getSquareY());
        }
        return;
    }
    method void fall(){
        var int key;
        var Speed speed;
        var int address1;
        var int address2;
        var int address3;
        var int address4;
        let speed = Speed.new();
        let key = Keyboard.keyPressed();
        if (key = 132){
            do MoveRight();
        }
        if (key = 130){
            do MoveLeft();
        }
        let address1 = 16384 + ((Square1.getSquareY() + 16) * 32) + (Square1.getSquareX() / 16);
        let address2 = 16384 + ((Square2.getSquareY() + 16) * 32) + (Square2.getSquareX() / 16);
        let address3 = 16384 + ((Square3.getSquareY() + 16) * 32) + (Square3.getSquareX() / 16);
        let address4 = 16384 + ((Square4.getSquareY() + 16) * 32) + (Square4.getSquareX() / 16);
        do Sys.wait(50);
        do Sys.wait(speed.getSpeed());
        if (((Memory.peek(address4) > 0) | (Memory.peek(address4) = 0)) & ((Memory.peek(address3) > 0) | (Memory.peek(address3) = 0)))
        { 
            do Screen.setColor(false);
            do Clear();
            do fallToPixels();
            do Screen.setColor(true);
            do printBigSquare();
            do fall();
        }
        return;
    }
    method void fallToPixels(){
        var CountPixelsMove countPixelsMove;
        let countPixelsMove = CountPixelsMove.new();
        do Square1.setSquare(Square1.getSquareX(), Square1.getSquareY() + countPixelsMove.getCountPixelsMove());
        do Square2.setSquare(Square2.getSquareX(), Square2.getSquareY() + countPixelsMove.getCountPixelsMove());
        do Square3.setSquare(Square3.getSquareX(), Square3.getSquareY() + countPixelsMove.getCountPixelsMove());
        do Square4.setSquare(Square4.getSquareX(), Square4.getSquareY() + countPixelsMove.getCountPixelsMove());
        return;
    }
    method void printBigSquare(){
        do Square1.printSquare();
        do Square2.printSquare();
        do Square3.printSquare();
        do Square4.printSquare();
        return;
    }
    method void MoveRight(){
        do Screen.setColor(false);
        do Clear();
        do Screen.setColor(true);
        do Square1.setSquare(Square1.getSquareX() + 16, Square1.getSquareY());
        do Square2.setSquare(Square2.getSquareX() + 16, Square2.getSquareY());
        do Square3.setSquare(Square3.getSquareX() + 16, Square3.getSquareY());
        do Square4.setSquare(Square4.getSquareX() + 16, Square4.getSquareY());
        if (CanDrawFigure() = false){
            do Square1.setSquare(Square1.getSquareX() - 16, Square1.getSquareY());
            do Square2.setSquare(Square2.getSquareX() - 16, Square2.getSquareY());
            do Square3.setSquare(Square3.getSquareX() - 16, Square3.getSquareY());
            do Square4.setSquare(Square4.getSquareX() - 16, Square4.getSquareY());
        }
        return;
    }
    method void MoveLeft(){
        do Screen.setColor(false);
        do Clear();
        do Screen.setColor(true);
        do Square1.setSquare(Square1.getSquareX() - 16, Square1.getSquareY());
        do Square2.setSquare(Square2.getSquareX() - 16, Square2.getSquareY());
        do Square3.setSquare(Square3.getSquareX() - 16, Square3.getSquareY());
        do Square4.setSquare(Square4.getSquareX() - 16, Square4.getSquareY());
        if (CanDrawFigure() = false){
            do Square1.setSquare(Square1.getSquareX() + 16, Square1.getSquareY());
            do Square2.setSquare(Square2.getSquareX() + 16, Square2.getSquareY());
            do Square3.setSquare(Square3.getSquareX() + 16, Square3.getSquareY());
            do Square4.setSquare(Square4.getSquareX() + 16, Square4.getSquareY());
        }
        return;
    }
    method void Clear(){
        do Square1.clear();
        do Square2.clear();
        do Square3.clear();
        do Square4.clear();
        return;
    }
    method bool CanDrawFigure(){
        if ((Square1.CanDraw() = true) & (Square2.CanDraw() = true) & (Square3.CanDraw() = true) & (Square4.CanDraw() = true)){
            return true;
        }
        return false;
    }
}